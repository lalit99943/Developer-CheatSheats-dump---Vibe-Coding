import { CheatSheet } from '../../types';

export const redisCheatSheets: CheatSheet[] = [
  {
    id: 'redis-1',
    category: 'Redis',
    subCategory: 'bash',
    title: 'Set and Get a Key',
    snippet: 'SET mykey "Hello"\nGET mykey',
    description: '`SET` stores a string value for a given key. `GET` retrieves the value of a key. If the key does not exist, `nil` is returned.',
    tags: ['redis', 'string', 'set', 'get', 'key-value'],
  },
  {
    id: 'redis-2',
    category: 'Redis',
    subCategory: 'bash',
    title: 'Increment a Number',
    snippet: 'SET mynumber 10\nINCR mynumber\nGET mynumber',
    description: '`INCR` increments the number stored at a key by one. If the key does not exist, it is set to 0 before performing the operation. An error is returned if the key contains a value of the wrong type.',
    tags: ['redis', 'string', 'number', 'incr', 'atomic'],
  },
  {
    id: 'redis-3',
    category: 'Redis',
    subCategory: 'bash',
    title: 'Key Existence and Deletion',
    snippet: 'EXISTS mykey\nDEL mykey',
    description: '`EXISTS` checks if a key exists and returns 1 if it does, 0 otherwise. `DEL` removes the specified key.',
    tags: ['redis', 'key', 'exists', 'del', 'delete'],
  },
  {
    id: 'redis-4',
    category: 'Redis',
    subCategory: 'bash',
    title: 'Set a Key with Expiration',
    snippet: 'SETEX mykey 60 "Hello"\nTTL mykey',
    description: '`SETEX` (SET with EXpire) sets a key to a value with a specified timeout in seconds. `TTL` (Time To Live) returns the remaining time to live of a key that has a timeout.',
    tags: ['redis', 'key', 'expire', 'ttl', 'setex'],
  },
  {
    id: 'redis-5',
    category: 'Redis',
    subCategory: 'bash',
    title: 'Push to a List (LPUSH)',
    snippet: 'LPUSH mylist "world"\nLPUSH mylist "hello"',
    description: '`LPUSH` prepends one or more values to a list. It creates the list if it does not exist. This acts like a stack.',
    tags: ['redis', 'list', 'lpush', 'data structures'],
  },
  {
    id: 'redis-6',
    category: 'Redis',
    subCategory: 'bash',
    title: 'Get a Range from a List',
    snippet: 'LRANGE mylist 0 -1',
    description: '`LRANGE` returns the specified elements of the list stored at a key. The offsets `start` and `stop` are zero-based. `0 -1` means retrieve all elements from the list.',
    tags: ['redis', 'list', 'lrange', 'data structures'],
  },
  {
    id: 'redis-7',
    category: 'Redis',
    subCategory: 'bash',
    title: 'Set Fields in a Hash',
    snippet: 'HSET myhash field1 "Hello" field2 "World"',
    description: '`HSET` sets the specified fields to their respective values in the hash stored at a key. It is useful for storing objects.',
    tags: ['redis', 'hash', 'hset', 'object', 'data structures'],
  },
  {
    id: 'redis-8',
    category: 'Redis',
    subCategory: 'bash',
    title: 'Get All Fields from a Hash',
    snippet: 'HGETALL myhash',
    description: '`HGETALL` returns all fields and values of the hash stored at a key. It returns a list of fields and their values.',
    tags: ['redis', 'hash', 'hgetall', 'object', 'data structures'],
  },
  {
    id: 'redis-9',
    category: 'Redis',
    subCategory: 'bash',
    title: 'Add to a Set',
    snippet: 'SADD myset "apple"\nSADD myset "banana"\nSADD myset "apple"',
    description: '`SADD` adds the specified members to the set stored at a key. Specified members that are already a member of this set are ignored.',
    tags: ['redis', 'set', 'sadd', 'unique', 'data structures'],
  },
  {
    id: 'redis-10',
    category: 'Redis',
    subCategory: 'bash',
    title: 'Get All Members of a Set',
    snippet: 'SMEMBERS myset',
    description: '`SMEMBERS` returns all the members of the set value stored at a key.',
    tags: ['redis', 'set', 'smembers', 'data structures'],
  },
  {
    id: 'redis-11',
    category: 'Redis',
    subCategory: 'bash',
    title: 'Publish a Message',
    snippet: 'PUBLISH mychannel "Hello World"',
    description: 'Posts a message to the given channel. This is part of Redis\'s Publish/Subscribe messaging paradigm.',
    tags: ['redis', 'pubsub', 'publish', 'messaging'],
  },
  {
    id: 'redis-12',
    category: 'Redis',
    subCategory: 'bash',
    title: 'Subscribe to a Channel',
    snippet: 'SUBSCRIBE mychannel',
    description: 'Listens for messages published to the given channels. This command blocks the client and waits for messages.',
    tags: ['redis', 'pubsub', 'subscribe', 'messaging'],
  }
];
