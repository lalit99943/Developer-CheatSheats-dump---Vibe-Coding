import { CheatSheet } from '../../types';

export const dockerCheatSheets: CheatSheet[] = [
  {
    id: 'docker-1',
    category: 'Docker',
    subCategory: 'bash',
    title: 'Build a Docker Image',
    snippet: 'docker build -t <image_name>:<tag> .',
    description: 'Builds a Docker image from a Dockerfile in the current directory, tagging it with a specified name and tag.',
    tags: ['docker', 'build', 'image', 'dockerfile'],
  },
  {
    id: 'docker-2',
    category: 'Docker',
    subCategory: 'bash',
    title: 'Run a Docker Container',
    snippet: 'docker run -d -p 8080:80 --name <container_name> <image_name>',
    description: 'Runs a container from an image in detached mode, maps port 8080 on the host to port 80 in the container, and assigns it a name.',
    tags: ['docker', 'run', 'container', 'port mapping'],
  },
  {
    id: 'docker-3',
    category: 'Docker',
    subCategory: 'bash',
    title: 'List Running Containers',
    snippet: 'docker ps',
    description: 'Shows a list of all currently running Docker containers.',
    tags: ['docker', 'ps', 'list', 'containers', 'running'],
  },
  {
    id: 'docker-4',
    category: 'Docker',
    subCategory: 'bash',
    title: 'Docker Compose Up',
    snippet: 'docker-compose up -d',
    description: 'Starts and runs your entire multi-container application defined in `docker-compose.yml` in detached mode.',
    tags: ['docker', 'docker-compose', 'up', 'multi-container'],
  },
  {
    id: 'docker-5',
    category: 'Docker',
    subCategory: 'bash',
    title: 'List All Containers',
    snippet: 'docker ps -a',
    description: 'Shows a list of all containers, including those that are not currently running.',
    tags: ['docker', 'ps', 'list', 'containers', 'all'],
  },
  {
    id: 'docker-6',
    category: 'Docker',
    subCategory: 'bash',
    title: 'Stop and Start a Container',
    snippet: 'docker stop <container_id_or_name>\ndocker start <container_id_or_name>',
    description: 'Stops a running container or starts a stopped container using its ID or name.',
    tags: ['docker', 'stop', 'start', 'container management'],
  },
  {
    id: 'docker-7',
    category: 'Docker',
    subCategory: 'bash',
    title: 'Remove a Container',
    snippet: 'docker rm <container_id_or_name>',
    description: 'Removes a stopped container. Use `docker rm -f <id>` to force remove a running container.',
    tags: ['docker', 'rm', 'remove', 'delete', 'container'],
  },
  {
    id: 'docker-8',
    category: 'Docker',
    subCategory: 'bash',
    title: 'List Images',
    snippet: 'docker images',
    description: 'Displays all Docker images stored on your local machine.',
    tags: ['docker', 'images', 'list', 'image management'],
  },
  {
    id: 'docker-9',
    category: 'Docker',
    subCategory: 'bash',
    title: 'Remove an Image',
    snippet: 'docker rmi <image_id_or_name>',
    description: 'Removes a Docker image from your local machine. You must remove all containers using the image first.',
    tags: ['docker', 'rmi', 'remove', 'delete', 'image'],
  },
  {
    id: 'docker-10',
    category: 'Docker',
    subCategory: 'bash',
    title: 'View Container Logs',
    snippet: 'docker logs -f <container_id_or_name>',
    description: 'Fetches the logs of a container. The `-f` flag follows the log output in real-time.',
    tags: ['docker', 'logs', 'debug', 'container'],
  },
  {
    id: 'docker-11',
    category: 'Docker',
    subCategory: 'bash',
    title: 'Execute Command in Container',
    snippet: 'docker exec -it <container_id_or_name> bash',
    description: 'Opens an interactive bash shell inside a running container, allowing you to run commands within it.',
    tags: ['docker', 'exec', 'shell', 'debug', 'interactive'],
  },
  {
    id: 'docker-12',
    category: 'Docker',
    subCategory: 'bash',
    title: 'Docker Compose Down',
    snippet: 'docker-compose down -v',
    description: 'Stops and removes containers, networks, and volumes created by `docker-compose up`. The `-v` flag removes named volumes.',
    tags: ['docker', 'docker-compose', 'down', 'cleanup'],
  },
  {
    id: 'docker-13',
    category: 'Docker',
    subCategory: 'bash',
    title: 'Pull Image from Registry',
    snippet: 'docker pull <image_name>:<tag>',
    description: 'Downloads a Docker image or a repository from a registry (like Docker Hub).',
    tags: ['docker', 'pull', 'download', 'image', 'registry'],
  },
  {
    id: 'docker-14',
    category: 'Docker',
    subCategory: 'bash',
    title: 'Clean Up Docker System',
    snippet: 'docker system prune -a --volumes',
    description: 'Removes all unused data: stopped containers, unused networks, dangling images, and build cache. `-a` removes unused images, not just dangling ones. `--volumes` removes unused volumes.',
    tags: ['docker', 'system', 'prune', 'cleanup', 'disk space'],
  },
  {
    id: 'docker-15',
    category: 'Docker',
    subCategory: 'bash',
    title: 'Inspect a Container or Image',
    snippet: 'docker inspect <container_or_image_id>',
    description: 'Returns low-level information on Docker objects in JSON format. Extremely useful for debugging, as it shows network settings, volumes, and configurations.',
    tags: ['docker', 'inspect', 'debug', 'json', 'details'],
  },
  {
    id: 'docker-16',
    category: 'Docker',
    subCategory: 'bash',
    title: 'Manage Docker Volumes',
    snippet: 'docker volume create my-volume\ndocker volume ls\ndocker volume rm my-volume',
    description: 'Volumes are the preferred mechanism for persisting data generated by and used by Docker containers. These commands create, list, and remove volumes.',
    tags: ['docker', 'volume', 'data', 'persistence', 'storage'],
  },
];