import { CheatSheet } from '../../types';

export const awsCheatSheets: CheatSheet[] = [
  {
    id: 'aws-1',
    category: 'AWS',
    subCategory: 'bash',
    title: 'Configure AWS CLI',
    type: 'code',
    snippet: 'aws configure',
    description: 'Configures your AWS CLI with credentials by prompting for an Access Key ID, Secret Access Key, default region, and output format.',
    tags: ['aws', 'cli', 'configure', 'credentials', 'iam'],
  },
  {
    id: 'aws-2',
    category: 'AWS',
    subCategory: 'bash',
    title: 'List S3 Buckets',
    type: 'code',
    snippet: 'aws s3 ls',
    description: 'Lists all of the S3 buckets in your account.',
    tags: ['aws', 's3', 'list', 'ls', 'bucket', 'storage'],
  },
  {
    id: 'aws-3',
    category: 'AWS',
    subCategory: 'bash',
    title: 'Copy Files to S3',
    type: 'code',
    snippet: 'aws s3 cp my-local-file.txt s3://my-bucket/path/to/object.txt',
    description: 'Copies a local file to an S3 bucket. Also works for copying from S3 to local, or between S3 buckets.',
    tags: ['aws', 's3', 'copy', 'cp', 'upload', 'storage'],
  },
  {
    id: 'aws-4',
    category: 'AWS',
    subCategory: 'bash',
    title: 'Sync a Directory with S3',
    type: 'code',
    snippet: 'aws s3 sync ./my-local-dir/ s3://my-bucket/my-dir/',
    description: 'Recursively syncs a directory with an S3 prefix. It only copies new or updated files, making it efficient for backups or deployments.',
    tags: ['aws', 's3', 'sync', 'directory', 'backup', 'deploy'],
  },
  {
    id: 'aws-5',
    category: 'AWS',
    subCategory: 'bash',
    title: 'Describe EC2 Instances',
    type: 'code',
    snippet: 'aws ec2 describe-instances --filters "Name=instance-state-name,Values=running"',
    description: 'Retrieves details about your EC2 instances. You can use filters to narrow down the results, for example, to show only running instances.',
    tags: ['aws', 'ec2', 'describe', 'instance', 'compute', 'list'],
  },
  {
    id: 'aws-6',
    category: 'AWS',
    subCategory: 'bash',
    title: 'Start/Stop EC2 Instances',
    type: 'code',
    snippet: 'aws ec2 start-instances --instance-ids i-1234567890abcdef0\naws ec2 stop-instances --instance-ids i-1234567890abcdef0',
    description: 'Starts or stops one or more specified EC2 instances using their instance IDs.',
    tags: ['aws', 'ec2', 'start', 'stop', 'instance', 'compute'],
  },
  {
    id: 'aws-7',
    category: 'AWS',
    subCategory: 'bash',
    title: 'List IAM Users',
    type: 'code',
    snippet: 'aws iam list-users',
    description: 'Lists the IAM users in your AWS account.',
    tags: ['aws', 'iam', 'user', 'security', 'list'],
  },
  {
    id: 'aws-8',
    category: 'AWS',
    subCategory: 'bash',
    title: 'Get Caller Identity',
    type: 'code',
    snippet: 'aws sts get-caller-identity',
    description: 'Returns details about the IAM user or role whose credentials are being used to call the operation. Useful for verifying which user/role you are currently authenticated as.',
    tags: ['aws', 'sts', 'iam', 'security', 'whoami', 'identity'],
  },
  {
    id: 'aws-9',
    category: 'AWS',
    subCategory: 'bash',
    title: 'Tail CloudWatch Logs',
    type: 'code',
    snippet: 'aws logs tail /aws/lambda/my-function-name --follow',
    description: 'Tails the logs for a specific CloudWatch Log Group. The `--follow` flag streams new log events as they become available.',
    tags: ['aws', 'logs', 'cloudwatch', 'tail', 'lambda', 'debug'],
  },
  {
    id: 'aws-10',
    category: 'AWS',
    subCategory: 'bash',
    title: 'List Lambda Functions',
    type: 'code',
    snippet: 'aws lambda list-functions',
    description: 'Returns a list of your Lambda functions, along with their configuration information.',
    tags: ['aws', 'lambda', 'serverless', 'list', 'function'],
  },
  {
    id: 'aws-11',
    category: 'AWS',
    subCategory: 'bash',
    title: 'Invoke a Lambda Function',
    type: 'code',
    snippet: 'aws lambda invoke --function-name my-function-name response.json',
    description: 'Invokes a Lambda function directly from the command line. The response from the function is saved to the specified output file (response.json).',
    tags: ['aws', 'lambda', 'serverless', 'invoke', 'run', 'test'],
  },
  {
    id: 'aws-12',
    category: 'AWS',
    subCategory: 'bash',
    title: 'List DynamoDB Tables',
    type: 'code',
    snippet: 'aws dynamodb list-tables',
    description: 'Returns an array of table names associated with the current account and endpoint.',
    tags: ['aws', 'dynamodb', 'database', 'nosql', 'list', 'table'],
  },
  {
    id: 'aws-13',
    category: 'AWS',
    subCategory: 'bash',
    title: 'Generate S3 Pre-signed URL',
    type: 'code',
    snippet: 'aws s3 presign s3://my-bucket/my-object.txt --expires-in 3600',
    description: 'Creates a pre-signed URL that grants temporary access to an S3 object. Anyone with the URL can access the object with the permissions of the user who created the URL, for the specified duration (in seconds).',
    tags: ['aws', 's3', 'presign', 'security', 'url', 'temporary access'],
  },
];
